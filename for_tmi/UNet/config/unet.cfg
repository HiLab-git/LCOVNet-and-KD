[dataset]
# tensor type (float or double)
tensor_type = float

task_type = seg
root_dir  = /home/data/zhaoqianfei/new_pymic
train_csv = /home/data/zhaoqianfei/new_pymic/config/train.csv
valid_csv = /home/data/zhaoqianfei/new_pymic/config/valid.csv
test_csv  = /home/data/zhaoqianfei/new_pymic/config/test.csv

train_batch_size = 2

# data transforms
train_transform = [Rescale, RandomCrop, RandomFlip, NormalizeWithMeanStd, LabelConvert, LabelToProbability]
valid_transform = [Rescale, NormalizeWithMeanStd, LabelConvert, LabelToProbability]
test_transform  = [Rescale, NormalizeWithMeanStd]

Rescale_output_size    = [160, 256, 256]
RandomCrop_output_size = [64, 128, 128]

RandomFlip_flip_depth  = False
RandomFlip_flip_height = True
RandomFlip_flip_width  = True

NormalizeWithMeanStd_channels = [0]

LabelConvert_source_list = [0, 255]
LabelConvert_target_list = [0, 1]

[network]
# this section gives parameters for network
# the keys may be different for different networks

# type of network
net_type = UNetKD

# number of class, required for segmentation task
class_num = 17

in_chns       = 1
feature_chns  = [16, 32, 64, 128, 256]
dropout       = [0,  0,  0.0, 0.1, 0.2]
bilinear      = False
multiscale_pred = False

[training]
# list of gpus
gpus = [3]

loss_type     = [DiceLoss]
loss_weight   = [1.0]

# for optimizers
optimizer     = Adam
learning_rate = 1e-3
momentum      = 0.9
weight_decay  = 1e-5

# for lr schedular  
lr_scheduler  = ReduceLROnPlateau
lr_gamma      = 0.5
ReduceLROnPlateau_patience = 2000
early_stop_patience = 5000

ckpt_save_dir    = /home/data/zhaoqianfei/new_pymic/for_tmi/UNet/model/unet

# start iter
iter_start = 0
iter_max   = 15000
iter_valid = 100
iter_save  = 5000

[testing]
# list of gpus
gpus       = [0]

# checkpoint mode can be [0-latest, 1-best, 2-specified]
ckpt_mode  = 0
output_dir = result

# use test time augmentation
tta_mode = 0

sliding_window_enable = True
sliding_window_size   = [64, 160, 160]
sliding_window_stride = [64, 160, 160]

# convert the label of prediction output
label_source = [0, 1]
label_target = [0, 255]
